<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.IMemberDAO">
<sql id="searchFrag">
	WHERE M.MEM_DEL IS NULL
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
			<choose>
				<when test="searchType eq 'admin'">
					AND M.MEM_ID LIKE '%'||#{searchWord,jdbcType=VARCHAR}||'%'
					AND M.GR_NUM = 2
				</when>
				<when test="searchType eq 'userId'">
					AND M.MEM_ID LIKE '%'||#{searchWord, jdbcType=VARCHAR}||'%'
					AND M.GR_NUM = 3
				</when>
				<when test="searchType eq 'black'">
					AND M.MEM_ID LIKE '%'||#{searchWord, jdbcType=VARCHAR}||'%'
					AND M.GR_NUM = 4
				</when>
				<otherwise>
					AND M.MEM_ID LIKE '%'||#{searchWord, jdbcType=VARCHAR}||'%'
				</otherwise>
			</choose>
		</if>
		<choose>
			<when test="searchType eq 'admin'">
				AND M.GR_NUM = 2
			</when>
			<when test="searchType eq 'userId'">
				AND M.GR_NUM = 3
			</when>
			<when test="searchType eq 'black'">
				AND M.GR_NUM = 4
			</when>
		</choose>
		<if test="role eq 1"> 
	  		AND M.GR_NUM != #{role}
	    </if>
	    <if test="role eq 2">
	   		AND M.GR_NUM != 1 
	   		AND M.GR_NUM != 2 
	    </if>
</sql>

<!-- 회원상세정보 -->
<!-- <resultMap type="MemberVO" id="memberMap"> -->
<!-- 	<id property="mem_id" column="MEM_ID"/> -->
<!-- 	<collection property="noticeList" ofType="NoticeVO" autoMapping="true"> -->
<!-- 		<id property="notice_num" column="NOTICE_NUM"/> -->
<!-- 	</collection> -->
<!-- </resultMap> -->
<select id="selectMember" resultType="memberVO">
SELECT  
   M.MEM_ID,
   M.MEM_NAME,
   M.MEM_GEN,
   M.MEM_PASS,
   M.MEM_TEL,
   M.MEM_MAIL,
   M.MEM_IMAGE,
   M.MEM_DEL,
   M.GR_NUM,
   M.LOGIN_TYPE
FROM MEMBER M 
WHERE M.MEM_ID = #{mem_id}
</select>

<select id="findMember" resultType="memberVO">
SELECT  
   M.MEM_ID,
   M.MEM_NAME,
   M.MEM_GEN,
   M.MEM_PASS,
   M.MEM_TEL,
   M.MEM_MAIL,
   M.MEM_IMAGE,
   M.MEM_DEL,
   M.GR_NUM,
   M.LOGIN_TYPE
FROM MEMBER M 
WHERE M.MEM_NAME = #{mem_name}
AND M.MEM_MAIL = #{mem_mail}
AND M.LOGIN_TYPE IS NULL
</select>

<select id="selectMemberCount" parameterType="PagingVO" resultType="long">
	SELECT COUNT(*)
	FROM MEMBER M
   <include refid="searchFrag"/>
</select>

<!-- 회원목록 -->
<select id="selectMemberList" parameterType="PagingVO" resultType="MemberVO">
   SELECT B.*
   FROM( 
   		SELECT ROWNUM RNUM, A.*
	   FROM(
	      SELECT M.MEM_ID, M.MEM_NAME, M.MEM_GEN, M.MEM_PASS, 
	            M.MEM_TEL, M.MEM_MAIL, M.MEM_IMAGE, M.MEM_DEL, M.GR_NUM, G.GR_NAME, M.LOGIN_TYPE,
	            DECODE(M.GR_NUM, 1, 'ROLE_ROOT', 2, 'ROLE_ADMIN', 3, 'ROLE_USER', 4, 'ROLE_BLACK') MEM_ROLE
	            FROM MEMBER M INNER JOIN GRADE G ON(M.GR_NUM = G.GR_NUM)
	            <include refid="searchFrag" />
	   		)A
	  )B
   WHERE RNUM BETWEEN #{startRow} AND #{endRow}
</select>

<!-- 유효시간이 지나지 않았으며 해당 session_id를 가지고 있는 사용자 -->
<select id="chkSession" resultType="MemberVO">
	SELECT * FROM MEMBER
	WHERE SESSION_ID = #{session_id}
	AND SESSION_LIMITE > SYSDATE
</select>

<!-- 회원등록 -->
<insert id="insertMember" parameterType="MemberVO">
   INSERT INTO MEMBER(
      MEM_ID,
      MEM_NAME,
      MEM_PASS,
      MEM_GEN,
      MEM_TEL,
      MEM_MAIL,
      MEM_IMAGE,
      GR_NUM,
      LOGIN_TYPE
   )VALUES(
      #{mem_id},
      #{mem_name},
      #{mem_pass},
      #{mem_gen},
      #{mem_tel},
      #{mem_mail},
      #{mem_image, jdbcType=VARCHAR},
      3,
      #{login_type,jdbcType=NUMERIC}
   )
</insert>
<!-- 회원정보수정 -->
<update id="updateMember" parameterType="MemberVO">
   UPDATE MEMBER
   SET
      MEM_PASS = #{mem_pass},
      MEM_MAIL = #{mem_mail}
     <if test="mem_image !=null">
  		,MEM_IMAGE = #{mem_image}
   	 </if>
   WHERE MEM_ID = #{mem_id}
</update>

<!-- 회원삭제를 위한 업데이트 -->
<update id="deleteMember" parameterType="String">
   UPDATE MEMBER
   SET
      MEM_DEL = 'Y',
      MEM_DEL_DATE = SYSDATE
   WHERE MEM_ID = #{mem_id}
</update>
<!-- 회원등급 수정 -->
<update id="updateGrade" parameterType="MemberVO">
	UPDATE MEMBER
	SET
		GR_NUM = #{gr_num}
	WHERE MEM_ID = #{mem_id}
</update>

<!-- 회원의 비밀번호 수정 -->
<update id="updatePass" parameterType="MemberVO">
	UPDATE MEMBER
	SET
		MEM_PASS = #{mem_pass}
	WHERE MEM_ID = #{mem_id}
</update>

<!-- 로그인 상태 저장 -->
<update id="updateSession" parameterType="MemberVO">
	UPDATE MEMBER
	SET
		SESSION_ID = #{session_id},
		SESSION_LIMITE = #{session_limite}
	WHERE MEM_ID = #{mem_id}
</update>
</mapper>


