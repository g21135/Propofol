<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.order.dao.IOrderDAO">
	<sql id="searchFrag">
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
			<choose>
				<when test="searchType.equals('type')">
					AND ORDER_TYPE LIKE '%'||#{searchWord}||'%'
				</when>
				<when test="searchType.equals('userId')">
					AND C.MEM_ID LIKE '%'||#{searchWord}||'%'
				</when>
				<otherwise>
					AND ORDER_TYPE LIKE '%'||#{searchWord}||'%'
					OR C.MEM_ID LIKE '%'||#{searchWord}||'%'
				</otherwise>
			</choose>
		</if>
	</sql>
	
	<sql id="manageMentFrag">
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(manageMentType)">
			<choose>
				<when test="manageMentType.equals('member')">
					AND C.MEM_ID = #{manageMentId}
				</when>
				<when test="manageMentType.equals('admin_orderList')">
					AND C.ORDER_DATE IS NOT NULL
					AND C.ORDER_PAY IS NULL
					AND C.ORDER_END_DATE IS NULL
				</when>
				<when test="manageMentType.equals('admin_order_modifyList')">
					AND C.ORDER_DATE IS NOT NULL
					AND C.ORDER_PAY IS NOT NULL
					AND C.ORDER_END_DATE IS NULL
					AND C.ORDER_TYPE = '수정'
					AND C.ADMIN_ID = #{manageMentId}
				</when>
				<when test="manageMentType.equals('admin_order_produceList')">
					AND C.ORDER_DATE IS NOT NULL
					AND C.ORDER_PAY IS NOT NULL
					AND C.ORDER_END_DATE IS NULL
					AND C.ORDER_TYPE = '제작'
					AND C.ADMIN_ID = #{manageMentId}
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
		</if>
	</sql>
	
	<select id="selectOrderListCount" resultType="int" parameterType="PagingVO">
				SELECT COUNT(*) 
				FROM ORDER_TB C
				WHERE 1=1
			    <include refid="searchFrag" />
			    <include refid="manageMentFrag" />
	</select>
	
	<select id="selectTypeOrderList" parameterType="OrderTbVO" resultType="OrderTbVO">
		 SELECT SUM(ORDER_COST) ORDER_COST, ORDER_TYPE ORDER_DATE
		    FROM ORDER_TB
		    GROUP BY ORDER_TYPE
	</select>
	
	<select id="selectMonthOrderList" parameterType="OrderTbVO" resultType="OrderTbVO">
		 SELECT SUM(ORDER_COST) ORDER_COST, TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') ORDER_DATE
		    FROM ORDER_TB
		    WHERE ORDER_DATE <![CDATA[ >= ]]> TO_DATE(#{order_date}||'-01', 'YYYY-MM-DD') AND ORDER_DATE <![CDATA[ < ]]> TO_DATE(#{order_date}||'-30', 'YYYY-MM-DD')
		    GROUP BY TO_CHAR(ORDER_DATE, 'YYYY-MM-DD')
	    	ORDER BY ORDER_DATE
	</select>
	
	<select id="selectManagerOrderList" parameterType="OrderTbVO" resultType="OrderTbVO">
		 SELECT SUM(ORDER_COST) ORDER_COST, TO_CHAR(ORDER_DATE, 'YYYY-MM') ORDER_DATE
		    FROM ORDER_TB
		    WHERE ORDER_DATE <![CDATA[ >= ]]> '2019-01-01' AND ORDER_DATE <![CDATA[ < ]]> '2019-12-31'
		    GROUP BY TO_CHAR(ORDER_DATE, 'YYYY-MM')
		    ORDER BY ORDER_DATE
	</select>
	
	<resultMap type="OrderTbVO" id="orderMap" autoMapping="true">
		<id property="order_num" column="ORDER_NUM"/>
		<collection property="orderFormList" javaType="java.util.List" ofType="OrderFormVO" autoMapping="true"> <!-- 1:N Has Many -->
			<id property="form_num" column="FORM_NUM"/>
		</collection>
	</resultMap>
	
	<select id="selectOrderList" resultMap="orderMap" parameterType="PagingVO">
		SELECT B.*
			FROM (
				SELECT ROWNUM RNUM, A.*
				FROM (
					SELECT 	C.ORDER_NUM,    C.MEM_ID,    ORDER_TYPE,
							    TO_CHAR(ORDER_START_DATE, 'YYYY-MM-DD') ORDER_START_DATE,    
							    TO_CHAR(ORDER_END_DATE, 'YYYY-MM-DD') ORDER_END_DATE,    
							    TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') ORDER_DATE,
							    ORDER_COST,    ORDER_WAY,    ORDER_MEANS,
							    ORDER_PAY, ADMIN_ID, P.PORT_NAME, P.PORT_NUM
					FROM ORDER_TB C LEFT JOIN PORTFOLIO P ON(C.ORDER_NUM = P.ORDER_NUM)
					WHERE 1=1
					<include refid="searchFrag" />
					<include refid="manageMentFrag" />
					ORDER BY ORDER_NUM DESC
				) A
			) B
       		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectOrder" parameterType="int" resultType="OrderTbVO">
		SELECT 	A.ORDER_NUM,   A.MEM_ID,    ORDER_TYPE,
				    TO_CHAR(ORDER_START_DATE, 'YYYY-MM-DD') ORDER_START_DATE,    
				    TO_CHAR(ORDER_END_DATE, 'YYYY-MM-DD') ORDER_END_DATE,    
				    TO_CHAR(ORDER_DATE, 'YYYY-MM-DD') ORDER_DATE,
				    ORDER_COST,    ORDER_WAY,    ORDER_MEANS,
				    ORDER_PAY, ADMIN_ID, P.PORT_NAME, P.PORT_NUM
		  FROM ORDER_TB A LEFT JOIN PORTFOLIO P ON(A.ORDER_NUM = P.ORDER_NUM)
		WHERE A.ORDER_NUM = #{order_num}
	</select>
	
	<update id="choiceOrder" parameterType="OrderTbVO">
		UPDATE ORDER_TB
		SET ADMIN_ID = #{admin_id},
		ORDER_PAY = 'Y'
		WHERE ORDER_NUM = #{order_num}
	</update>
	
	<update id="completionOrder" parameterType="int">
		UPDATE ORDER_TB
		SET ORDER_END_DATE = SYSDATE
		WHERE ORDER_NUM = #{order_num}
	</update>
	
	<insert id="insertOrder">
		<selectKey order="BEFORE" resultType="int" keyProperty="order_num">
	      SELECT ORDERSEQ.NEXTVAL FROM DUAL
	   </selectKey>
		INSERT INTO ORDER_TB (
		    ORDER_NUM,
		    MEM_ID,
		    ORDER_TYPE,
		    ORDER_DATE
		    <if test="order_start_date != null">
		    ,ORDER_START_DATE
		    </if>
		    <if test="order_end_date != null">
		    ,ORDER_END_DATE
		    </if>
		    <if test="order_cost != null">
		    ,ORDER_COST
		    </if>
		    <if test="order_way != null">
		    ,ORDER_WAY
		    </if>
		    <if test="order_means != null">
		    ,ORDER_MEANS
		    </if>
		    <if test="order_pay != null">
		    ,ORDER_PAY
		    </if>
		) VALUES (
		   	#{order_num},
		    #{mem_id},
		    #{order_type},
		    SYSDATE
		    <if test="order_start_date != null">
		    #{order_start_date},
		    </if>
		    <if test="order_end_date != null">
		    ,#{order_end_date}
		    </if>
		    <if test="order_cost != null">
		    ,#{order_cost}
		    </if>
		    <if test="order_way != null">
		    ,#{order_way}
		    </if>
		    <if test="order_means != null">
		    ,#{order_means}
		    </if>
		    <if test="order_pay != null">
		    ,#{order_pay}
		    </if>
		)
			
	</insert>
</mapper>